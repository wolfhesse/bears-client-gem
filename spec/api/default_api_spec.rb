=begin
Swagger Bearsapi (Simple)

A sample API that uses a bears=mongostore as an example to demonstrate features in the swagger-2.0 specification

OpenAPI spec version: 1.0.0
Contact: foo@example.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instact of DefaultApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DefaultApi)
    end
  end

  # unit tests for add_bear
  # 
  # Creates a new bear in the store.  Duplicates are allowed
  # @param bear Bear to add to the store
  # @param [Hash] opts the optional parameters
  # @return [Bear]
  describe 'add_bear test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_bear
  # 
  # deletes a single bear based on the ID supplied
  # @param id ID of bear to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_bear test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_bears
  # 
  # Returns all bears from the system that the user has access to
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tags tags to filter by
  # @option opts [Integer] :limit maximum number of results to return
  # @return [Array<Bear>]
  describe 'find_bears test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_bear_by_id
  # 
  # Returns a user based on a single ID, if the user does not have access to the bear
  # @param id ID of bear to fetch
  # @param [Hash] opts the optional parameters
  # @return [Bear]
  describe 'find_bear_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
